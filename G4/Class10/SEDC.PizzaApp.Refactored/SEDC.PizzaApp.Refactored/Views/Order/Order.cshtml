@model OrderViewModel
@{ ViewBag.Title = "Order Pizza"; }
<h1>Order Pizza</h1>
<h3>@ViewBag.ErrorMessage</h3>
@using (Html.BeginForm())
{
    <div class="row">
        <div class="col-md-6">
            <span class="input-group-addon">@Html.LabelFor(x => x.FirstName)</span>
            @Html.TextBox("model.FirstName", null, new { @class = "form-control" })
        </div>
        <div class="col-md-6">
            <span class="input-group-addon">@Html.LabelFor(x => x.LastName)</span>
            @Html.TextBox("model.LastName", null, new { @class = "form-control" })
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <span class="input-group-addon">@Html.LabelFor(x => x.Address)</span>
            @Html.TextBox("model.Address", null, new { @class = "form-control" })
        </div>
        <div class="col-md-6">
            <span class="input-group-addon">@Html.LabelFor(x => x.Phone)</span>
            @Html.TextBox("model.Phone", null, new { @class = "form-control" })
        </div>
    </div>
    @for (int i = 0; i < Model.Pizzas.Count; i++)
    {
    <div class="row">
        <div class="col-md-6">
            <span class="input-group-addon">@Html.LabelFor(x => x.Pizzas[i].Name)</span>
            @Html.DropDownList($"model.Pizzas[{i}].Name", Model.AvailablePizzas.Select(x => new SelectListItem(x, x)), new { @class = "form-control" })
        </div>
        <div class="col-md-6">
            <span class="input-group-addon">@Html.LabelFor(x => x.Pizzas[i].Size)</span>
            @Html.DropDownList($"model.Pizzas[{i}].Size", Html.GetEnumSelectList(Model.Pizzas[i].Size.GetType()), new { @class = "form-control" })
        </div>
    </div>
    }
<br />
<button class="btn btn-danger" type="submit">Order</button>
}